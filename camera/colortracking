import cv

color_tracker_window = "Color Tracker"

class ColorTracker:

	def __init__(self):
		cv.NamedWindow(color_tracker_window,1)
		self.capture = cv.CaptureFromCAM(0)

	def run(self):
		while True:
			img = cv.QueryFrame(self.capture)

			cv.Smooth(img,img,cv.CV_BLUR,3);

			hsv_img = cv.CreateImage(cv.GetSize(img),8,3)
			cv.CvtColor(img,hsv_img,cv.CV_BGR2HSV)
			
			thresholded_img = cv.CreateImage(cv.GetSize(hsv_img),8,1)
			cv.InRangeS(hsv_img,(0,50,50),(0,255,255),thresholded_img)

			moments = cv.Moments(cv.GetMat(thresholded_img,1),0)
			area = cv.GetCentralMoment(moments,0,0)

			if(area > 100000):
				x = cv.GetSpatialMoment(moments,1,0)/area
				y = cv.GetSpatialMoment(moments,0,1)/area

				overlay = cv.CreateImage(cv.GetSize(img),8,3)

				cv.Circle(img,(int(x),int(y)),2,(255,255,255),20)
				cv.Add(img,overlay,img)

				cv.Merge(thresholded_img,None,None,None,img)

			cv.ShowImage(color_tracker_window,img)

			if cv.WaitKey(10)==27:
				break

if __name__=="__main__":
	color_tracker = ColorTracker()
	color_tracker.run()